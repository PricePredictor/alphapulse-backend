# AlphaPulse API Overview (Planned Endpoints)

## âœ… Completed Endpoints

### 1. `/` (root)
- **Description:** Health check endpoint
- **Method:** GET
- **Response:** `{ "message": "AlphaPulse FastAPI backend is live." }`

### 2. `/health`
- **Description:** Health status indicator
- **Method:** GET
- **Response:** `{ "status": "ok" }`

### 3. `/predict-xgb`
- **Description:** Predict price using XGBoost model
- **Query Param:** `ticker` (e.g., AAPL)
- **Method:** GET
- **Response:** `{ "ticker": "AAPL", "model": "XGBoost", "prediction": <value> }`

### 4. `/predict-lstm`
- **Description:** Predict price using LSTM model
- **Query Param:** `ticker` (e.g., AAPL)
- **Optional:** `sequence_length` (default: 50)
- **Method:** GET
- **Response:** `{ "ticker": "AAPL", "model": "LSTM", "prediction": <value> }`

### 5. `/predict-all`
- **Description:** Returns predictions from all models for a given ticker
- **Query Param:** `ticker`
- **Response:** `{ "ticker": "AAPL", "predictions": { "XGBoost": <value>, "LSTM": <value> } }`

### 6. `/history`
- **Description:** Returns historical price data
- **Query Param:** `ticker`, `period` (e.g., 1y), `interval` (e.g., 1d)
- **Response:** JSON array of prices

### 7. `/backtest`
- **Description:** Runs backtesting on prediction models
- **Query Param:** `ticker`, `model`, `start`, `end`
- **Response:** backtest metrics (e.g., accuracy, return, MSE)

### 8. `/accuracy`
- **Description:** Returns model accuracy on test data
- **Query Param:** `model`
- **Response:** `{ "model": "XGBoost", "accuracy": 0.87 }`

### 9. `/top-movers`
- **Description:** Shows top moving stocks today
- **Response:** JSON of top gainers/losers

### 10. `/live-price`
- **Description:** Fetches current market price for given ticker
- **Response:** `{ "ticker": "AAPL", "price": 187.12, "timestamp": "<timestamp>" }`

---

## ðŸ”„ Upcoming Model Endpoints

### 11. `/predict-rf` (Random Forest)
- **Description:** Predicts price using Random Forest model
- **Query Param:** `ticker`
- **Response:** `{ "ticker": "AAPL", "model": "RandomForest", "prediction": <value> }`

### 12. `/predict-lr` (Linear Regression)
- **Description:** Predicts price using Linear Regression model
- **Query Param:** `ticker`
- **Response:** `{ "ticker": "AAPL", "model": "LinearRegression", "prediction": <value> }`

Let me know which new model to add first, and Iâ€™ll guide setup, training, and API logic.
